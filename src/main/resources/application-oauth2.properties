# === CONFIGURATION OAUTH2 GOOGLE ===
# Ce fichier contient la configuration OAuth2 pour Google
# Les valeurs réelles sont configurées dans application.properties

# === GOOGLE OAUTH2 CLIENT ===
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID:1037870342905-b37d3kenk6qu0j67d1pmt6b7gufi9rht.apps.googleusercontent.com}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET: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}
spring.security.oauth2.client.registration.google.scope=openid,profile,email
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}

# === GOOGLE OAUTH2 PROVIDER ===
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=sub

# === FRONTEND REDIRECTION ===
# URL de redirection après authentification OAuth2 réussie
app.oauth2.success-redirect-url=${OAUTH2_SUCCESS_REDIRECT_URL:http://localhost:3005/oauth2-success}
app.oauth2.failure-redirect-url=${OAUTH2_FAILURE_REDIRECT_URL:http://localhost:3005/signin?error=oauth2_failed}

# === SESSION CONFIGURATION ===
# Configuration des sessions pour OAuth2
spring.security.oauth2.client.registration.google.client-authentication-method=client_secret_basic
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code

# === OAUTH2 SECURITY ===
# Configuration de sécurité spécifique à OAuth2
spring.security.oauth2.client.registration.google.registration-id=google
spring.security.oauth2.client.registration.google.client-name=Google

# === OAUTH2 LOGIN CONFIGURATION ===
# Configuration du processus de connexion OAuth2
spring.security.oauth2.login.login-processing-url=/login/oauth2/code/google
spring.security.oauth2.login.default-success-url=${app.oauth2.success-redirect-url}
spring.security.oauth2.login.failure-url=${app.oauth2.failure-redirect-url}

# === OAUTH2 USER ATTRIBUTES ===
# Mapping des attributs utilisateur OAuth2
spring.security.oauth2.client.registration.google.client-authentication-method=client_secret_basic
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code

# === OAUTH2 SCOPES ===
# Scopes OAuth2 pour Google
spring.security.oauth2.client.registration.google.scope=openid,profile,email

# === OAUTH2 REDIRECT URI TEMPLATE ===
# Template pour l'URI de redirection (utilise la même valeur que redirect-uri)
# spring.security.oauth2.client.registration.google.redirect-uri-template={baseUrl}/oauth2/authorization/{registrationId}

# === OAUTH2 PROVIDER CONFIGURATION ===
# Configuration du fournisseur Google
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=sub
spring.security.oauth2.client.provider.google.jwk-set-uri=https://www.googleapis.com/oauth2/v3/certs

# === OAUTH2 CLIENT CONFIGURATION ===
# Configuration du client OAuth2 (utilise les mêmes valeurs que plus haut)
# spring.security.oauth2.client.client-registration.google.client-id=${GOOGLE_CLIENT_ID:1037870342905-b37d3kenk6qu0j67d1pmt6b7gufi9rht.apps.googleusercontent.com}
# spring.security.oauth2.client.client-registration.google.client-secret=${GOOGLE_CLIENT_SECRET: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}

# === OAUTH2 LOGIN SUCCESS HANDLER ===
# Configuration du gestionnaire de succès de connexion
app.oauth2.success-handler.enabled=true
app.oauth2.success-handler.redirect-url=${app.oauth2.success-redirect-url}

# === OAUTH2 LOGIN FAILURE HANDLER ===
# Configuration du gestionnaire d'échec de connexion
app.oauth2.failure-handler.enabled=true
app.oauth2.failure-handler.redirect-url=${app.oauth2.failure-redirect-url}

# === OAUTH2 USER SERVICE ===
# Configuration du service utilisateur OAuth2
app.oauth2.user-service.enabled=true
app.oauth2.user-service.default-role=ROLE_USER

# === OAUTH2 SESSION MANAGEMENT ===
# Gestion des sessions OAuth2
spring.security.oauth2.session.creation-policy=if_required
spring.security.oauth2.session.maximum-sessions=1
spring.security.oauth2.session.expired-url=/signin?expired

# === OAUTH2 CORS CONFIGURATION ===
# Configuration CORS pour OAuth2
spring.security.oauth2.cors.allowed-origins=${CORS_ORIGINS:http://localhost:3000,http://localhost:5173,http://localhost:3005}
spring.security.oauth2.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.security.oauth2.cors.allowed-headers=*
spring.security.oauth2.cors.allow-credentials=true
spring.security.oauth2.cors.max-age=3600
