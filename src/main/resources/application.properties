# === CONFIGURATION UNIFIÉE DIRAVENIR ===
# Un seul fichier pour tous les environnements !

# === PROFIL ACTIF ===
spring.profiles.active=dev

# === BASE DE DONNÉES MYSQL ===
spring.datasource.url=jdbc:mysql://${DB_HOST:localhost}:${DB_PORT:3306}/${DB_NAME:diravenir}?useSSL=${DB_USE_SSL:false}&serverTimezone=UTC&allowPublicKeyRetrieval=true&createDatabaseIfNotExist=true
spring.datasource.username=${DB_USERNAME:root}
spring.datasource.password=${DB_PASSWORD:root}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# === JPA/HIBERNATE ===
# Mode UPDATE pour le développement, VALIDATE pour la production
spring.jpa.hibernate.ddl-auto=${HIBERNATE_DDL_AUTO:update}
spring.jpa.show-sql=${HIBERNATE_SHOW_SQL:true}
spring.jpa.properties.hibernate.format_sql=${HIBERNATE_FORMAT_SQL:true}

# === PERFORMANCE JPA ===
spring.jpa.open-in-view=false

# === FLYWAY ===
# Désactivé - on utilise Hibernate ddl-auto=update
spring.flyway.enabled=${FLYWAY_ENABLED:false}
spring.flyway.locations=classpath:db/migration
spring.flyway.baseline-on-migrate=true
spring.flyway.validate-on-migrate=true

# === SERVEUR ===
server.port=${SERVER_PORT:8084}

# === CORS ===
# Configuration CORS simplifiée
spring.web.cors.allowed-origins=${CORS_ORIGINS:http://localhost:3000,http://localhost:5173,http://localhost:3005}
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true

# === LOGGING ===
logging.level.com.dira.diravenir1=${LOG_LEVEL:DEBUG}
logging.level.org.springframework.web=INFO
logging.level.org.hibernate.SQL=${HIBERNATE_SHOW_SQL:DEBUG}
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=${HIBERNATE_FORMAT_SQL:DEBUG}

# === PERFORMANCE ===
# Optimisations pour les performances
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true

# === ADMIN CONFIGURATION ===
# Configuration de l'admin principal (à gérer manuellement)
app.admin.email=${ADMIN_EMAIL:admin@diravenir.com}
app.admin.password=${ADMIN_PASSWORD:admin123}
app.admin.nom=${ADMIN_NOM:Admin}
app.admin.prenom=${ADMIN_PRENOM:System}

# === JWT CONFIGURATION ===
# Configuration JWT mise à jour pour la sécurité
application.security.jwt.secret-key=404E635266556A586E3272357538782F413F4428472B4B6250645367566B5970
application.security.jwt.expiration=86400000
application.security.jwt.refresh-token.expiration=604800000

# === SPRING SECURITY ===
# Configuration de sécurité Spring - CORRIGÉE
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID:1037870342905-b37d3kenk6qu0j67d1pmt6b7gufi9rht.apps.googleusercontent.com}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET: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}
spring.security.oauth2.client.registration.google.scope=openid,profile,email
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}

# === OAUTH2 PROVIDER CONFIGURATION ===
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=sub
spring.security.oauth2.client.provider.google.jwk-set-uri=https://www.googleapis.com/oauth2/v3/certs

# === OAUTH2 REDIRECTION URLs ===
# URLs de redirection après authentification OAuth2 - CORRIGÉES
app.oauth2.success-redirect-url=${OAUTH2_SUCCESS_REDIRECT_URL:http://localhost:3000/oauth2-success}
app.oauth2.failure-redirect-url=${OAUTH2_FAILURE_REDIRECT_URL:http://localhost:3000/oauth2-failure}

# === SESSION CONFIGURATION ===
# Configuration des sessions pour OAuth2
spring.session.timeout=86400
spring.session.cookie.secure=false
spring.session.cookie.http-only=true
spring.session.cookie.same-site=lax

# === COOKIE SECURITY ===
# Configuration des cookies sécurisés - CORRIGÉE pour le développement
app.cookie.secure=false
app.cookie.http-only=true
app.cookie.same-site=Lax
app.cookie.domain=

# === EMAIL CONFIGURATION UNIFIÉE ===
# Configuration SMTP Gmail pour l'envoi d'emails (OTP, vérification, etc.)
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=imanecompte024@gmail.com
spring.mail.password=eeor guik iftz nico
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.connectiontimeout=10000
spring.mail.properties.mail.smtp.timeout=10000
spring.mail.properties.mail.smtp.writetimeout=10000
spring.mail.properties.mail.smtp.ssl.trust=smtp.gmail.com
spring.mail.properties.mail.smtp.ssl.protocols=TLSv1.2

# === EMAIL VERIFICATION ===
# Configuration de la vérification email
app.email.verification.expiration=${EMAIL_VERIFICATION_EXPIRATION:168}
app.email.verification.cleanup.interval=21600000

# === PASSWORD RESET ===
# Configuration de la réinitialisation de mot de passe
app.password.reset.expiration=${PASSWORD_RESET_EXPIRATION:1}

# === OTP CONFIGURATION ===
# Configuration OTP pour l'envoi de codes de vérification
app.otp.expiry-minutes=${OTP_EXPIRY_MINUTES:10}
app.otp.max-daily-attempts=${OTP_MAX_DAILY_ATTEMPTS:5}
app.otp.length=${OTP_LENGTH:6}
app.otp.security.max-retry-attempts=${OTP_MAX_RETRY_ATTEMPTS:3}
app.otp.security.block-duration-minutes=${OTP_BLOCK_DURATION:30}
app.otp.security.require-email-verification=true

# === EMAIL TEMPLATES ===
# Configuration des templates email pour OTP
app.email.templates.otp.subject=Code de vérification Diravenir
app.email.templates.otp.from=Diravenir <imanecompte024@gmail.com>
app.email.templates.otp.reply-to=support@diravenir.com

# === NOTIFICATIONS ===
# Configuration des notifications
app.notifications.email.enabled=true
app.notifications.sms.enabled=false
app.notifications.whatsapp.enabled=false

# === RATE LIMITING ===
# Limitation du taux de requêtes
rate.limit.max=${RATE_LIMIT_MAX:60}
signup.rate.limit=${SIGNUP_RATE_LIMIT:10}

# === SESSION CLEANUP ===
# Nettoyage automatique des sessions
session.cleanup.interval=${SESSION_CLEANUP_INTERVAL:300000}
session.inactivity.threshold=${SESSION_INACTIVITY_THRESHOLD:30}

# === FRONTEND URL ===
# URL du frontend pour les liens dans les emails
app.frontend.url=${FRONTEND_URL:http://localhost:3000}

# === ENVIRONMENT ===
# Variables d'environnement
spring.config.import=optional:file:.env[.properties]
