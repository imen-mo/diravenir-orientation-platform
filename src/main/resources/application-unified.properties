# === CONFIGURATION UNIFIÉE DIRAVENIR ===
# Un seul fichier pour tous les environnements et fonctionnalités !

# === PROFIL ACTIF ===
spring.profiles.active=dev

# === BASE DE DONNÉES MYSQL ===
spring.datasource.url=jdbc:mysql://${DB_HOST:localhost}:${DB_PORT:3306}/${DB_NAME:diravenir}?useSSL=${DB_USE_SSL:false}&serverTimezone=UTC&allowPublicKeyRetrieval=true&createDatabaseIfNotExist=true
spring.datasource.username=${DB_USERNAME:root}
spring.datasource.password=${DB_PASSWORD:root}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# === JPA/HIBERNATE ===
# Mode UPDATE pour le développement, VALIDATE pour la production
spring.jpa.hibernate.ddl-auto=${HIBERNATE_DDL_AUTO:update}
spring.jpa.show-sql=${HIBERNATE_SHOW_SQL:true}
spring.jpa.properties.hibernate.format_sql=${HIBERNATE_FORMAT_SQL:true}

# === PERFORMANCE JPA ===
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true

# === FLYWAY ===
# Désactivé - on utilise Hibernate ddl-auto=update
spring.flyway.enabled=${FLYWAY_ENABLED:false}
spring.flyway.locations=classpath:db/migration
spring.flyway.baseline-on-migrate=true
spring.flyway.validate-on-migrate=true

# === SERVEUR ===
server.port=${SERVER_PORT:8084}

# === CORS ===
spring.web.cors.allowed-origins=${CORS_ORIGINS:http://localhost:3000,http://localhost:5173}
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true

# === LOGGING ===
logging.level.com.dira.diravenir1=${LOG_LEVEL:DEBUG}
logging.level.org.springframework.web=INFO
logging.level.org.hibernate.SQL=${HIBERNATE_SHOW_SQL:DEBUG}
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=${HIBERNATE_FORMAT_SQL:DEBUG}

# === ADMIN CONFIGURATION ===
app.admin.email=${ADMIN_EMAIL:admin@diravenir.com}
app.admin.password=${ADMIN_PASSWORD:admin123}
app.admin.nom=${ADMIN_NOM:Admin}
app.admin.prenom=${ADMIN_PRENOM:System}

# === JWT CONFIGURATION ===
application.security.jwt.secret-key=404E635266556A586E3272357538782F413F4428472B4B6250645367566B5970
application.security.jwt.expiration=86400000
application.security.jwt.refresh-token.expiration=604800000

# === SPRING SECURITY ===
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/oauth2/authorization/{registrationId}
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=sub

# === COOKIE SECURITY ===
app.cookie.secure=true
app.cookie.http-only=true
app.cookie.same-site=Strict
app.cookie.domain=

# === EMAIL CONFIGURATION UNIFIÉE ===
# Configuration SMTP principale (Gmail)
spring.mail.host=${MAIL_HOST:smtp.gmail.com}
spring.mail.port=${MAIL_PORT:587}
spring.mail.username=${MAIL_USERNAME:imanecompte024@gmail.com}
spring.mail.password=${MAIL_PASSWORD:eeor guik iftz nico}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.connectiontimeout=10000
spring.mail.properties.mail.smtp.timeout=10000
spring.mail.properties.mail.smtp.writetimeout=10000
spring.mail.properties.mail.smtp.ssl.trust=${MAIL_HOST:smtp.gmail.com}
spring.mail.properties.mail.smtp.ssl.protocols=TLSv1.2

# Configuration Email alternative (SendGrid)
# spring.mail.host=smtp.sendgrid.net
# spring.mail.port=587
# spring.mail.username=apikey
# spring.mail.password=${SENDGRID_API_KEY:}

# Configuration Email alternative (Amazon SES)
# spring.mail.host=email-smtp.eu-west-1.amazonaws.com
# spring.mail.port=587
# spring.mail.username=${AWS_SES_USERNAME:}
# spring.mail.password=${AWS_SES_PASSWORD:}

# === EMAIL VERIFICATION ===
app.email.verification.expiration=${EMAIL_VERIFICATION_EXPIRATION:168}
app.email.verification.cleanup.interval=21600000

# === OTP CONFIGURATION ===
app.otp.expiry-minutes=${OTP_EXPIRY_MINUTES:10}
app.otp.max-daily-attempts=${OTP_MAX_DAILY_ATTEMPTS:5}
app.otp.length=${OTP_LENGTH:6}
app.otp.security.max-retry-attempts=${OTP_MAX_RETRY_ATTEMPTS:3}
app.otp.security.block-duration-minutes=${OTP_BLOCK_DURATION:30}
app.otp.security.require-email-verification=true

# === EMAIL TEMPLATES ===
app.email.from=${EMAIL_FROM:noreply@diravenir.com}
app.email.subject=${EMAIL_SUBJECT:Code de vérification Diravenir}
app.email.templates.otp.subject=Code de vérification Diravenir
app.email.templates.otp.from=Diravenir <noreply@diravenir.com>
app.email.templates.otp.reply-to=support@diravenir.com

# === NOTIFICATIONS ===
app.notifications.email.enabled=true
app.notifications.sms.enabled=false
app.notifications.whatsapp.enabled=false

# === OTP LOGGING ===
app.otp.logging.enabled=true
app.otp.logging.level=INFO
app.otp.logging.retain-days=90

# === OTP TESTING ===
app.otp.testing.enabled=false
app.otp.testing.test-email=test@diravenir.com
app.otp.testing.bypass-email-send=false

# === PAYMENT CONFIGURATION ===
app.payment.stripe.public-key=${STRIPE_PUBLIC_KEY:}
app.payment.stripe.secret-key=${STRIPE_SECRET_KEY:}
app.payment.stripe.webhook-secret=${STRIPE_WEBHOOK_SECRET:}
app.payment.application-fee=${APPLICATION_FEE:50}
app.payment.service-charge=${SERVICE_CHARGE:100}
app.payment.currency=${PAYMENT_CURRENCY:USD}

# === MATCHING ALGORITHM ===
app.matching.algorithm.type=${MATCHING_ALGORITHM:HYBRID}
app.matching.weights.academic=${ACADEMIC_WEIGHT:0.3}
app.matching.weights.personal=${PERSONAL_WEIGHT:0.2}
app.matching.weights.financial=${FINANCIAL_WEIGHT:0.2}
app.matching.weights.language=${LANGUAGE_WEIGHT:0.15}
app.matching.weights.preferences=${PREFERENCES_WEIGHT:0.15}
